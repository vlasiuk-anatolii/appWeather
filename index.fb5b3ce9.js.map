{"mappings":"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","sources":["src/scripts/celsiy.js","src/scripts/isNight.js","src/scripts/fillwidget.js","src/scripts/api.js","src/scripts/createCard.js","src/scripts/clear.js","src/scripts/createList.js","src/scripts/allcities.js","src/scripts/details.js","src/scripts/accordion.js","src/scripts/main.js"],"sourcesContent":["function getCelciy(kelvin) {\n  const temp = (Math.round((kelvin - 273)) * 10) / 10;\n  if (temp > 0) {\n    return `+${temp}°C`;\n  }\n\n  if (temp < 0) {\n    return `-${temp}°C`;\n  }\n\n  return `${temp}°C`;\n}\n\nexport default getCelciy;\n","const nightFrom = 21;\nconst nightTo = 6;\n\nfunction isNight() {\n  const currentTime = new Date();\n  const currentHours = currentTime.getHours();\n\n  if (currentHours > nightFrom || currentHours < nightTo) {\n    return true;\n  }\n  return false;\n}\nexport default isNight;\n","import getCelciy from './celsiy';\nimport isNight from './isNight';\n\nconst MMMM = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nfunction fillWidget(cityFromServer) {\n  if (cityFromServer.cod === '400') {\n    const place = document.getElementById('place');\n    place.textContent = 'Type city';\n  } else {\n    const temp = document.getElementById('temp');\n\n    if (cityFromServer.main.temp) {\n      temp.textContent = getCelciy(cityFromServer.main.temp);\n    }\n    const icon = document.getElementById('icon');\n    const currentUrl = `url(http://openweathermap.org/img/wn/${cityFromServer.weather[0].icon}@2x.png)`;\n\n    if (isNight()) {\n      const nightLayoutUrl = currentUrl.replace(/d(?=@)/, 'n');\n      icon.style.backgroundImage = nightLayoutUrl;\n    } else {\n      const dayLayoutUrl = currentUrl.replace(/n(?=@)/, 'd');\n      icon.style.backgroundImage = dayLayoutUrl;\n    }\n    const kind = document.getElementById('short-kind');\n    kind.textContent = cityFromServer.weather[0].main;\n    const kindDescription = document.getElementById('long-kind');\n    kindDescription.textContent = cityFromServer.weather[0].description;\n    const place = document.getElementById('place');\n    place.textContent = `${cityFromServer.name}, ${cityFromServer.sys.country}`;\n    const date = document.getElementById('date');\n    const currentDate = new Date(cityFromServer.dt * 1000);\n    date.textContent = `${currentDate.getDate()} ${MMMM[currentDate.getMonth()]} ${currentDate.getFullYear()}`;\n    const min = document.getElementById('temp-min');\n    min.textContent = getCelciy(cityFromServer.main.temp_min);\n    const max = document.getElementById('temp-max');\n    max.textContent = getCelciy(cityFromServer.main.temp_max);\n  }\n}\nexport default fillWidget;\n","export async function getWeather(city) {\n  try {\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=79b60acd04707a3adf97329d89451cf2`);\n\n    return response.json();\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getCities(city) {\n  try {\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/find?q=${city}&APPID=79b60acd04707a3adf97329d89451cf2`);\n\n    return response.json();\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getCurrentCity(lon, lat) {\n  try {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=79b60acd04707a3adf97329d89451cf2`);\n\n    return response.json();\n  } catch (error) {\n    return error;\n  }\n}\n","import fillWidget from './fillwidget';\nimport { getCurrentCity } from './api';\nimport isNight from './isNight';\n\nconst arrayTemp = [];\n\nfunction createCard(nameCity, lon, lat, country) {\n  const objForSave = {\n    name: nameCity,\n    lon,\n    lat,\n    country,\n  };\n  const imagesContainer = document.createElement('div');\n  imagesContainer.classList.add('card');\n  imagesContainer.classList.add('cities__card');\n  const imageButtonBox = document.createElement('div');\n  imageButtonBox.classList.add('card__images');\n\n  if (isNight()) {\n    imageButtonBox.style.backgroundColor = '#2a344b';\n  } else {\n    imageButtonBox.style.backgroundColor = '#90caf9';\n  }\n\n  const cardButton = document.createElement('button');\n  cardButton.classList.add('card__button');\n  imageButtonBox.style.backgroundImage = `url(https://countryflagsapi.com/svg/${objForSave.country})`;\n  if (nameCity) {\n    cardButton.textContent = nameCity;\n  }\n  imageButtonBox.appendChild(cardButton);\n  imagesContainer.appendChild(imageButtonBox);\n  cardButton.addEventListener('click', () => {\n    getCurrentCity(lon, lat)\n      .then((result) => {\n        fillWidget(result);\n        imageButtonBox.style.backgroundImage = `url(https://countryflagsapi.com/svg/${result.sys.country})`;\n        objForSave.country = `${result.sys.country}`;\n      });\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  });\n  const boxImages = document.getElementById('box-images');\n  const arrayOfCards = document.getElementsByClassName('cities__card');\n  if (arrayOfCards.length === 5) {\n    boxImages.firstElementChild.remove();\n  }\n\n  if (arrayTemp.length === 5) {\n    arrayTemp.shift();\n  }\n\n  arrayTemp.push(objForSave);\n  localStorage.setItem('obj', JSON.stringify(arrayTemp));\n\n  boxImages.appendChild(imagesContainer);\n}\nexport default createCard;\n","function clear() {\n  const prevList = document.getElementsByClassName('dropdown');\n\n  for (let i = 0; i < prevList.length; i += 1) {\n    prevList[i].remove();\n  }\n}\n\nexport default clear;\n","import createCard from './createCard';\nimport fillWidget from './fillwidget';\nimport clear from './clear';\nimport { getCurrentCity } from './api';\nimport isNight from './isNight';\n\nfunction createListDropDown(listCities) {\n  const listContainer = document.createElement('div');\n  listContainer.classList.add('dropdown');\n  const list = document.createElement('ul');\n  list.setAttribute('id', 'list');\n  list.classList.add('dropdown__list');\n  listContainer.appendChild(list);\n  const label = document.getElementById('label-search');\n  const parentDiv = label.parentNode;\n  let item;\n\n  if (listCities instanceof Array) {\n    listCities.forEach((element) => {\n      item = document.createElement('li');\n      item.setAttribute('data', `${element.name} ${element.sys.country} ${element.id} ${element.coord.lon} ${element.coord.lat}`);\n      list.appendChild(item);\n      item.textContent = `${element.name}, ${element.sys.country}`;\n\n      if (isNight()) {\n        item.classList.toggle('dropdown__item-night');\n      } else {\n        item.classList.toggle('dropdown__item');\n      }\n      item.addEventListener('click', () => {\n        getCurrentCity(element.coord.lon, element.coord.lat)\n          .then((result) => {\n            if (result) {\n              fillWidget(result);\n            }\n          });\n        clear();\n        createCard(element.name, element.coord.lon, element.coord.lat, element.sys.country);\n      });\n    });\n  } else {\n    item = document.createElement('li');\n    // item.classList.add('dropdown__item');\n    list.appendChild(item);\n    item.textContent = 'City not found!';\n    if (isNight()) {\n      item.classList.toggle('dropdown__item-night');\n    } else {\n      item.classList.toggle('dropdown__item');\n    }\n    item.addEventListener('click', () => {\n      clear();\n    });\n  }\n\n  parentDiv.insertBefore(listContainer, label);\n}\nexport default createListDropDown;\n","import createListDropDown from './createList';\nimport clear from './clear';\nimport { getCities } from './api';\n\nfunction allCities(value) {\n  getCities(value)\n    .then((cityFromServer) => {\n      clear();\n      if (cityFromServer.code === '400' || cityFromServer.count === 0) {\n        createListDropDown();\n      } else {\n        createListDropDown(cityFromServer.list);\n      }\n    });\n}\nexport default allCities;\n","import createListDropDown from './createList';\nimport fillWidget from './fillwidget';\nimport { getWeather } from './api';\n\nfunction getDetails(value) {\n  getWeather(value)\n    .then((result) => {\n      if (result.code === '400') {\n        createListDropDown();\n      } else {\n        fillWidget(result);\n      }\n    });\n}\nexport default getDetails;\n","function accord(array, classActiveName) {\n  for (let i = 0; i < array.length; i += 1) {\n    array[i].addEventListener('click', function accordion() {\n      this.classList.toggle(`${classActiveName}`);\n\n      const kind = this.classList[0].match(/answer\\d/);\n      console.log(kind);\n      const panel = document.getElementById(kind[0]);\n      const section = document.getElementById(`question${kind[0][kind[0].length - 1]}`);\n\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n        section.style.boxShadow = 'none';\n      } else {\n        panel.style.maxHeight = `${panel.scrollHeight}px`;\n        section.style.transitionDuration = '.5s';\n        section.style.boxShadow = '0px -1px 62px -6px rgba(144,202,249,1)';\n      }\n    });\n  }\n}\nexport default accord;\n","import accord from './accordion';\nimport allCities from './allcities';\nimport getDetails from './details';\nimport createCard from './createCard';\nimport isNight from './isNight';\n\nconst acc = document.getElementsByClassName('accordion');\naccord(acc, 'active-arrow');\n\nconst input = document.getElementById('search');\n\ninput.addEventListener('keyup', (event) => {\n  allCities(event.target.value);\n\n  if (event.code === 'Enter') {\n    getDetails(event.target.value);\n  }\n});\n\nconst button = document.getElementById('button');\n\nbutton.addEventListener('click', () => {\n  allCities(input.value);\n  getDetails(input.value);\n});\nconst header = document.getElementById('header');\n\nif (isNight()) {\n  header.classList.add('header-night');\n  button.style.backgroundColor = '#2a344b';\n} else {\n  header.style.backgroundImage = '../images/day.png';\n  button.style.backgroundColor = '#90caf9';\n}\nlet saved = localStorage.getItem('obj');\n\nif (saved) {\n  saved = JSON.parse(saved);\n  saved.forEach((element) => {\n    createCard(element.name, element.lon, element.lat, element.country);\n  });\n}\n\nconst fotterText = document.getElementById('footer-text');\nfotterText.textContent = `Vlasiuk Anatolii - ${new Date().getFullYear()}`;\n"],"names":["$121e2fa27402e849$export$2e2bcd8739ae039","kelvin","temp","Math","round","$e33e5ed99e526809$export$2e2bcd8739ae039","currentHours","Date","getHours","$98d8a5b7d83bd4e0$var$MMMM","$98d8a5b7d83bd4e0$export$2e2bcd8739ae039","cityFromServer","cod","document","getElementById","textContent","main","icon","currentUrl","weather","nightLayoutUrl","replace","style","backgroundImage","dayLayoutUrl","description","name","sys","country","date","currentDate","dt","getDate","getMonth","getFullYear","temp_min","temp_max","async","$38284ca8c0530ade$export$ce1081f0c9899666","city","fetch","json","error","$38284ca8c0530ade$export$72dee2bbe2e51046","$38284ca8c0530ade$export$51869e65c904b671","lon","lat","$1f365c8dd1914b6a$var$arrayTemp","$1f365c8dd1914b6a$export$2e2bcd8739ae039","nameCity","objForSave","imagesContainer","createElement","classList","add","imageButtonBox","backgroundColor","cardButton","appendChild","addEventListener","then","result","window","scrollTo","top","left","behavior","boxImages","getElementsByClassName","length","firstElementChild","remove","shift","push","localStorage","setItem","JSON","stringify","$147dd59e07ab0da0$export$2e2bcd8739ae039","prevList","i","$7db521ff2c93b243$export$2e2bcd8739ae039","listCities","listContainer","list","setAttribute","label","parentDiv","parentNode","item","Array","forEach","element","id","coord","toggle","insertBefore","$16eca77b5acce160$export$2e2bcd8739ae039","value","code","count","$4a27bfd3ac174fa6$export$2e2bcd8739ae039","array","classActiveName","this","kind","match","console","log","panel","section","maxHeight","boxShadow","scrollHeight","transitionDuration","$f5e5effd96d66274$var$input","event","target","$f5e5effd96d66274$var$button","$f5e5effd96d66274$var$header","$f5e5effd96d66274$var$saved","getItem","parse"],"version":3,"file":"index.fb5b3ce9.js.map"}